[General]
sim-time-limit = 15s
network = car_network

## Class      PCP
## CDT         6
## ClassA      5 
## ClassB      4
## BestEffort  0

#####################################################

## use TSN switches
#*.SW*.typename = "TsnSwitch"
#
## use TSN devices
#*.Cam*.typename = "TsnDevice"
#*.DaCam.typename = "TsnDevice"
#*.HU.typename = "TsnDevice"
#*.RSE.typename = "TsnDevice"
#*.Telematics.typename = "TsnDevice"
#*.CU.typename = "TsnDevice"
#*.CdAudioDVD.typename = "TsnDevice"

# disable master clock
*.masterClock.typename = ""

# use TSN clock
# *.masterClock.typename = "TsnClock"

# other Ethernet links are 1Gbps
*.*.eth[*].bitrate = 1Gbps

# disable local multicast loop
**.udp.defaultMulticastLoop = false
###########################################################
#############################
# Stream Coding Configuration
# enable outgoing TSN streams
*.*.hasOutgoingStreams = true
*.*.hasIncomingStreams = true
###############################
# Traffic Shaping Configuration
# enable egress traffic shaping
*.SW*.hasEgressTrafficShaping = true
####################################
# disable forwarding IEEE 802.1Q C-Tag-?
*.SW*.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]
#############################


# Applications

# DaCam application
*.DaCam.numApps = 14

#Talker:S1
*.DaCam.app[0].typename = "UdpSourceApp"
*.DaCam.app[0].display-name = "S1 Talker"
*.DaCam.app[0].source.packetNameFormat = "%M->HU:CLASS_A-%c"
*.DaCam.app[0].source.packetLength = 46B
*.DaCam.app[0].source.productionInterval = 1000ms
*.DaCam.app[0].io.destAddress = "HU"
*.DaCam.app[0].io.destPort = 1000

#Talker:S2
*.DaCam.app[1].typename = "UdpSourceApp"
*.DaCam.app[1].display-name = "S2 Talker"
*.DaCam.app[1].source.packetNameFormat = "%M->HU:CLASS_A-%c"
*.DaCam.app[1].source.packetLength = 46B
*.DaCam.app[1].source.productionInterval = 200ms
*.DaCam.app[1].io.destAddress = "HU"
*.DaCam.app[1].io.destPort = 1001

#Talker:S3
*.DaCam.app[2].typename = "UdpSourceApp"
*.DaCam.app[2].display-name = "S3 Talker"
*.DaCam.app[2].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.DaCam.app[2].source.packetLength = 46B
*.DaCam.app[2].source.productionInterval = 1000ms
*.DaCam.app[2].io.destAddress = "CU"
*.DaCam.app[2].io.destPort = 1000

#Talker:S4
*.DaCam.app[3].typename = "UdpSourceApp"
*.DaCam.app[3].display-name = "S4 Talker"
*.DaCam.app[3].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.DaCam.app[3].source.packetLength = 46B
*.DaCam.app[3].source.productionInterval = 200ms
*.DaCam.app[3].io.destAddress = "CU"
*.DaCam.app[3].io.destPort = 1001

#Talker:S27
*.DaCam.app[4].typename = "UdpSourceApp"
*.DaCam.app[4].display-name = "S27 Talker"
*.DaCam.app[4].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.DaCam.app[4].source.packetLength = 678B
*.DaCam.app[4].source.productionInterval = 0.26ms
*.DaCam.app[4].io.destAddress = "HU"
*.DaCam.app[4].io.destPort = 1007

#Listener: S13
*.DaCam.app[5].typename = "UdpSinkApp"
*.DaCam.app[5].display-name = "S13 Listener"
*.DaCam.app[5].io.localPort = 1000

#Listener: S14
*.DaCam.app[6].typename = "UdpSinkApp"
*.DaCam.app[6].display-name = "S14 Listener"
*.DaCam.app[6].io.localPort = 1001

#Listener: S15
*.DaCam.app[7].typename = "UdpSinkApp"
*.DaCam.app[7].display-name = "S15 Listener"
*.DaCam.app[7].io.localPort = 1002

#Listener: S21
*.DaCam.app[8].typename = "UdpSinkApp"
*.DaCam.app[8].display-name = "S21 Listener"
*.DaCam.app[8].io.localPort = 1003

#Listener: S22
*.DaCam.app[9].typename = "UdpSinkApp"
*.DaCam.app[9].display-name = "S22 Listener"
*.DaCam.app[9].io.localPort = 1004

#Listener: S23
*.DaCam.app[10].typename = "UdpSinkApp"
*.DaCam.app[10].display-name = "S23 Listener"
*.DaCam.app[10].io.localPort = 1005

#Listener: S24 
*.DaCam.app[11].typename = "UdpSinkApp"
*.DaCam.app[11].display-name = "S24 Listener"
*.DaCam.app[11].io.localPort = 1006

#Listener: S25
*.DaCam.app[12].typename = "UdpSinkApp"
*.DaCam.app[12].display-name = "S25 Listener"
*.DaCam.app[12].io.localPort = 1007

#Listener: S26 
*.DaCam.app[13].typename = "UdpSinkApp"
*.DaCam.app[13].display-name = "S26 Listener"
*.DaCam.app[13].io.localPort = 1008

# HU applications
*.HU.numApps = 20

#Talker:S5
*.HU.app[0].typename = "UdpSourceApp"
*.HU.app[0].display-name = "S5 Talker"
*.HU.app[0].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[0].source.packetLength = 46B
*.HU.app[0].source.productionInterval = 5ms
*.HU.app[0].io.destAddress = "CU"
*.HU.app[0].io.destPort = 1002

#Talker:S6
*.HU.app[1].typename = "UdpSourceApp"
*.HU.app[1].display-name = "S6 Talker"
*.HU.app[1].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[1].source.packetLength = 46B
*.HU.app[1].source.productionInterval = 50ms
*.HU.app[1].io.destAddress = "CU"
*.HU.app[1].io.destPort = 1003

#Talker:S7
*.HU.app[2].typename = "UdpSourceApp"
*.HU.app[2].display-name = "S7 Talker"
*.HU.app[2].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[2].source.packetLength = 46B
*.HU.app[2].source.productionInterval = 100ms
*.HU.app[2].io.destAddress = "CU"
*.HU.app[2].io.destPort = 1004

#Talker:S8
*.HU.app[3].typename = "UdpSourceApp"
*.HU.app[3].display-name = "S8 Talker"
*.HU.app[3].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[3].source.packetLength = 46B
*.HU.app[3].source.productionInterval = 100ms
*.HU.app[3].io.destAddress = "CU"
*.HU.app[3].io.destPort = 1005

#Talker:S9
*.HU.app[4].typename = "UdpSourceApp"
*.HU.app[4].display-name = "S9 Talker"
*.HU.app[4].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[4].source.packetLength = 46B
*.HU.app[4].source.productionInterval = 200ms
*.HU.app[4].io.destAddress = "CU"
*.HU.app[4].io.destPort = 1006

#Talker:S10
*.HU.app[5].typename = "UdpSourceApp"
*.HU.app[5].display-name = "S10 Talker"
*.HU.app[5].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[5].source.packetLength = 46B
*.HU.app[5].source.productionInterval = 500ms
*.HU.app[5].io.destAddress = "CU"
*.HU.app[5].io.destPort = 1007

#Talker:S11
*.HU.app[6].typename = "UdpSourceApp"
*.HU.app[6].display-name = "S11 Talker"
*.HU.app[6].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[6].source.packetLength = 46B
*.HU.app[6].source.productionInterval = 1000ms
*.HU.app[6].io.destAddress = "CU"
*.HU.app[6].io.destPort = 1008

#Talker:S12
*.HU.app[7].typename = "UdpSourceApp"
*.HU.app[7].display-name = "S12 Talker"
*.HU.app[7].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[7].source.packetLength = 46B
*.HU.app[7].source.productionInterval = 1000ms
*.HU.app[7].io.destAddress = "CU"
*.HU.app[7].io.destPort = 1009

#Talker:S13
*.HU.app[8].typename = "UdpSourceApp"
*.HU.app[8].display-name = "S13 Talker"
*.HU.app[8].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[8].source.packetLength = 46B
*.HU.app[8].source.productionInterval = 100ms
*.HU.app[8].io.destAddress = "DaCam"
*.HU.app[8].io.destPort = 1000

#Talker:S14
*.HU.app[9].typename = "UdpSourceApp"
*.HU.app[9].display-name = "S14 Talker"
*.HU.app[9].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[9].source.packetLength = 46B
*.HU.app[9].source.productionInterval = 200ms
*.HU.app[9].io.destAddress = "DaCam"
*.HU.app[9].io.destPort = 1001

#Talker:S15
*.HU.app[10].typename = "UdpSourceApp"
*.HU.app[10].display-name = "S15 Talker"
*.HU.app[10].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.HU.app[10].source.packetLength = 46B
*.HU.app[10].source.productionInterval = 200ms
*.HU.app[10].io.destAddress = "DaCam"
*.HU.app[10].io.destPort = 1002

#Listener: S1
*.HU.app[11].typename = "UdpSinkApp"
*.HU.app[11].display-name = "S1 Listener"
*.HU.app[11].io.localPort = 1000

#Listener: S2
*.HU.app[12].typename = "UdpSinkApp"
*.HU.app[12].display-name = "S2 Listener"
*.HU.app[12].io.localPort = 1001

#Listener: S16
*.HU.app[13].typename = "UdpSinkApp"
*.HU.app[13].display-name = "S16 Listener"
*.HU.app[13].io.localPort = 1002

#Listener: S17
*.HU.app[14].typename = "UdpSinkApp"
*.HU.app[14].display-name = "S17 Listener"
*.HU.app[14].io.localPort = 1003

#Listener: S18
*.HU.app[15].typename = "UdpSinkApp"
*.HU.app[15].display-name = "S18 Listener"
*.HU.app[15].io.localPort = 1004

#Listener: S19
*.HU.app[16].typename = "UdpSinkApp"
*.HU.app[16].display-name = "S19 Listener"
*.HU.app[16].io.localPort = 1005

#Listener: S20
*.HU.app[17].typename = "UdpSinkApp"
*.HU.app[17].display-name = "S20 Listener"
*.HU.app[17].io.localPort = 1006

#Listener: S27
*.HU.app[18].typename = "UdpSinkApp"
*.HU.app[18].display-name = "S27 Listener"
*.HU.app[18].io.localPort = 1007

#Listener: S29
*.HU.app[19].typename = "UdpSinkApp"
*.HU.app[19].display-name = "S29 Listener"
*.HU.app[19].io.localPort = 1008


# CU applications
*.CU.numApps = 17

#Talker:S16
*.CU.app[0].typename = "UdpSourceApp"
*.CU.app[0].display-name = "S16 Talker"
*.CU.app[0].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.CU.app[0].source.packetLength = 46B
*.CU.app[0].source.productionInterval = 100ms
*.CU.app[0].io.destAddress = "HU"
*.CU.app[0].io.destPort = 1002

#Talker:S17
*.CU.app[1].typename = "UdpSourceApp"
*.CU.app[1].display-name = "S17 Talker"
*.CU.app[1].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.CU.app[1].source.packetLength = 46B
*.CU.app[1].source.productionInterval = 200ms
*.CU.app[1].io.destAddress = "HU"
*.CU.app[1].io.destPort = 1003

#Talker:S18
*.CU.app[2].typename = "UdpSourceApp"
*.CU.app[2].display-name = "S18 Talker"
*.CU.app[2].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.CU.app[2].source.packetLength = 46B
*.CU.app[2].source.productionInterval = 500ms
*.CU.app[2].io.destAddress = "HU"
*.CU.app[2].io.destPort = 1004

#Talker:S19
*.CU.app[3].typename = "UdpSourceApp"
*.CU.app[3].display-name = "S19 Talker"
*.CU.app[3].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.CU.app[3].source.packetLength = 46B
*.CU.app[3].source.productionInterval = 500ms
*.CU.app[3].io.destAddress = "HU"
*.CU.app[3].io.destPort = 1005

#Talker:S20
*.CU.app[4].typename = "UdpSourceApp"
*.CU.app[4].display-name = "S20 Talker"
*.CU.app[4].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.CU.app[4].source.packetLength = 46B
*.CU.app[4].source.productionInterval = 1000ms
*.CU.app[4].io.destAddress = "HU"
*.CU.app[4].io.destPort = 1006

#Talker:S21
*.CU.app[5].typename = "UdpSourceApp"
*.CU.app[5].display-name = "S21 Talker"
*.CU.app[5].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.CU.app[5].source.packetLength = 46B
*.CU.app[5].source.productionInterval = 10ms
*.CU.app[5].io.destAddress = "DaCam"
*.CU.app[5].io.destPort = 1003

#Talker:S22
*.CU.app[6].typename = "UdpSourceApp"
*.CU.app[6].display-name = "S22 Talker"
*.CU.app[6].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.CU.app[6].source.packetLength = 46B
*.CU.app[6].source.productionInterval = 1000ms
*.CU.app[6].io.destAddress = "DaCam"
*.CU.app[6].io.destPort = 1004

#Listener: S3
*.CU.app[7].typename = "UdpSinkApp"
*.CU.app[7].display-name = "S3 Listener"
*.CU.app[7].io.localPort = 1000

#Listener: S4
*.CU.app[8].typename = "UdpSinkApp"
*.CU.app[8].display-name = "S4 Listener"
*.CU.app[8].io.localPort = 1001

#Listener: S5
*.CU.app[9].typename = "UdpSinkApp"
*.CU.app[9].display-name = "S5 Listener"
*.CU.app[9].io.localPort = 1002

#Listener: S6
*.CU.app[10].typename = "UdpSinkApp"
*.CU.app[10].display-name = "S6 Listener"
*.CU.app[10].io.localPort = 1003

#Listener: S7
*.CU.app[11].typename = "UdpSinkApp"
*.CU.app[11].display-name = "S7 Listener"
*.CU.app[11].io.localPort = 1004

#Listener: S8
*.CU.app[12].typename = "UdpSinkApp"
*.CU.app[12].display-name = "S8 Listener"
*.CU.app[12].io.localPort = 1005

#Listener: S9
*.CU.app[13].typename = "UdpSinkApp"
*.CU.app[13].display-name = "S9 Listener"
*.CU.app[13].io.localPort = 1006

#Listener: S10
*.CU.app[14].typename = "UdpSinkApp"
*.CU.app[14].display-name = "S10 Listener"
*.CU.app[14].io.localPort = 1007

#Listener: S11
*.CU.app[15].typename = "UdpSinkApp"
*.CU.app[15].display-name = "S11 Listener"
*.CU.app[15].io.localPort = 1008

#Listener: S12
*.CU.app[16].typename = "UdpSinkApp"
*.CU.app[16].display-name = "S12 Listener"
*.CU.app[16].io.localPort = 1009

# Cam1 application
*.Cam1.numApps = 1

#Talker:S23
*.Cam1.app[0].typename = "UdpSourceApp"
*.Cam1.app[0].display-name = "S23 Talker"
*.Cam1.app[0].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.Cam1.app[0].source.packetLength = 678B
*.Cam1.app[0].source.productionInterval = 0.26ms
*.Cam1.app[0].io.destAddress = "DaCam"
*.Cam1.app[0].io.destPort = 1005

# Cam2 application
*.Cam2.numApps = 1

#Talker:S24
*.Cam2.app[0].typename = "UdpSourceApp"
*.Cam2.app[0].display-name = "S24 Talker"
*.Cam2.app[0].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.Cam2.app[0].source.packetLength = 678B
*.Cam2.app[0].source.productionInterval = 0.26ms
*.Cam2.app[0].io.destAddress = "DaCam"
*.Cam2.app[0].io.destPort = 1006

# Cam3 application
*.Cam3.numApps = 1

#Talker:S25
*.Cam3.app[0].typename = "UdpSourceApp"
*.Cam3.app[0].display-name = "S25 Talker"
*.Cam3.app[0].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.Cam3.app[0].source.packetLength = 678B
*.Cam3.app[0].source.productionInterval = 0.26ms
*.Cam3.app[0].io.destAddress = "DaCam"
*.Cam3.app[0].io.destPort = 1007

# Cam4 application
*.Cam4.numApps = 1

#Talker:S26
*.Cam4.app[0].typename = "UdpSourceApp"
*.Cam4.app[0].display-name = "S26 Talker"
*.Cam4.app[0].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.Cam4.app[0].source.packetLength = 678B
*.Cam4.app[0].source.productionInterval = 0.26ms
*.Cam4.app[0].io.destAddress = "DaCam"
*.Cam4.app[0].io.destPort = 1008

# Telematics application
*.Telematics.numApps = 2

#Talker:S28
*.Telematics.app[0].typename = "UdpSourceApp"
*.Telematics.app[0].display-name = "S28 Talker"
*.Telematics.app[0].source.packetNameFormat = "%M->CU:CLASS_A-%c"
*.Telematics.app[0].source.packetLength = 120B
*.Telematics.app[0].source.productionInterval = 0.125ms
*.Telematics.app[0].io.destAddress = "RSE"
*.Telematics.app[0].io.destPort = 1000

#Talker:S29
*.Telematics.app[1].typename = "UdpSourceApp"
*.Telematics.app[1].display-name = "S29 Talker"
*.Telematics.app[1].source.packetNameFormat = "%M->CU:CLASS_B-%c"
*.Telematics.app[1].source.packetLength = 50B
*.Telematics.app[1].source.productionInterval = 0.625ms
*.Telematics.app[1].io.destAddress = "HU"
*.Telematics.app[1].io.destPort = 1008

# CD/DVD application
*.CdAudioDVD.numApps = 2

#Talker:S30
*.CdAudioDVD.app[0].typename = "UdpSourceApp"
*.CdAudioDVD.app[0].display-name = "S30 Talker"
*.CdAudioDVD.app[0].source.packetNameFormat = "%M->CU:CLASS_B-%c"
*.CdAudioDVD.app[0].source.packetLength = 334B
*.CdAudioDVD.app[0].source.productionInterval = 0.256ms
*.CdAudioDVD.app[0].io.destAddress = "RSE"
*.CdAudioDVD.app[0].io.destPort = 1001

#Talker:S31
*.CdAudioDVD.app[1].typename = "UdpSourceApp"
*.CdAudioDVD.app[1].display-name = "S31 Talker"
*.CdAudioDVD.app[1].source.packetNameFormat = "%M->CU:CLASS_B-%c"
*.CdAudioDVD.app[1].source.packetLength = 334B
*.CdAudioDVD.app[1].source.productionInterval = 0.25ms
*.CdAudioDVD.app[1].io.destAddress = "RSE"
*.CdAudioDVD.app[1].io.destPort = 1002

# RSE application
*.RSE.numApps = 3

#Listener: S28
*.RSE.app[0].typename = "UdpSinkApp"
*.RSE.app[0].display-name = "S28 Listener"
*.RSE.app[0].io.localPort = 1000

#Listener: S30
*.RSE.app[1].typename = "UdpSinkApp"
*.RSE.app[1].display-name = "S30 Listener"
*.RSE.app[1].io.localPort = 1001

#Listener: S31
*.RSE.app[2].typename = "UdpSinkApp"
*.RSE.app[2].display-name = "S31 Listener"
*.RSE.app[2].io.localPort = 1002

###########################################################

# Stream Coding Configuration

# DaCam stream identification and coding
*.DaCam.bridging.streamIdentifier.identifier.mapping = [{stream: "S1 Talker", packetFilter: expr(udp.destPort == 1000)},
														{stream: "S2 Talker", packetFilter: expr(udp.destPort == 1001)},
														{stream: "S3 Talker", packetFilter: expr(udp.destPort == 1000)},
														{stream: "S4 Talker", packetFilter: expr(udp.destPort == 1001)},
														{stream: "S27 Talker", packetFilter: expr(udp.destPort == 1007)}]
*.DaCam.bridging.streamCoder.encoder.mapping = [{stream: "S1 Talker", pcp: 5},
												{stream: "S2 Talker", pcp: 5},
												{stream: "S3 Talker", pcp: 5},
												{stream: "S4 Talker", pcp: 5},
												{stream: "S27 Talker", pcp: 5}]

# HU stream identification and coding
*.HU.bridging.streamIdentifier.identifier.mapping = [{stream: "S5 Talker", packetFilter: expr(udp.destPort == 1002)},
														{stream: "S6 Talker", packetFilter: expr(udp.destPort == 1003)},
														{stream: "S7 Talker", packetFilter: expr(udp.destPort == 1004)},
														{stream: "S8 Talker", packetFilter: expr(udp.destPort == 1005)},
														{stream: "S9 Talker", packetFilter: expr(udp.destPort == 1006)},
														{stream: "S10 Talker", packetFilter: expr(udp.destPort == 1007)},
														{stream: "S11 Talker", packetFilter: expr(udp.destPort == 1008)},
														{stream: "S12 Talker", packetFilter: expr(udp.destPort == 1009)},
														{stream: "S13 Talker", packetFilter: expr(udp.destPort == 1000)},
														{stream: "S14 Talker", packetFilter: expr(udp.destPort == 1001)},
														{stream: "S15 Talker", packetFilter: expr(udp.destPort == 1002)}]
*.HU.bridging.streamCoder.encoder.mapping = [{stream: "S5 Talker", pcp: 5},
												{stream: "S6 Talker", pcp: 5},
												{stream: "S7 Talker", pcp: 5},
												{stream: "S8 Talker", pcp: 5},
												{stream: "S9 Talker", pcp: 5},
												{stream: "S10 Talker", pcp: 5},
												{stream: "S11 Talker", pcp: 5},
												{stream: "S12 Talker", pcp: 5},
												{stream: "S13 Talker", pcp: 5},
												{stream: "S14 Talker", pcp: 5},
												{stream: "S15 Talker", pcp: 5}]

# CU stream identification and coding
*.CU.bridging.streamIdentifier.identifier.mapping = [{stream: "S16 Talker", packetFilter: expr(udp.destPort == 1002)},
														{stream: "S17 Talker", packetFilter: expr(udp.destPort == 1003)},
														{stream: "S18 Talker", packetFilter: expr(udp.destPort == 1004)},
														{stream: "S19 Talker", packetFilter: expr(udp.destPort == 1005)},
														{stream: "S20 Talker", packetFilter: expr(udp.destPort == 1006)},
														{stream: "S21 Talker", packetFilter: expr(udp.destPort == 1003)},
														{stream: "S22 Talker", packetFilter: expr(udp.destPort == 1004)}]
*.CU.bridging.streamCoder.encoder.mapping = [{stream: "S16 Talker", pcp: 5},
												{stream: "S17 Talker", pcp: 5},
												{stream: "S18 Talker", pcp: 5},
												{stream: "S19 Talker", pcp: 5},
												{stream: "S20 Talker", pcp: 5},
												{stream: "S21 Talker", pcp: 5},
												{stream: "S22 Talker", pcp: 5}]

# CAM1 stream identification and coding
*.Cam1.bridging.streamIdentifier.identifier.mapping = [{stream: "S23 Talker", packetFilter: expr(udp.destPort == 1005)}]
*.Cam1.bridging.streamCoder.encoder.mapping = [{stream: "S23 Talker", pcp: 5}]

# CAM2 stream identification and coding
*.Cam2.bridging.streamIdentifier.identifier.mapping = [{stream: "S24 Talker", packetFilter: expr(udp.destPort == 1006)}]
*.Cam2.bridging.streamCoder.encoder.mapping = [{stream: "S24 Talker", pcp: 5}]

# CAM3 stream identification and coding
*.Cam3.bridging.streamIdentifier.identifier.mapping = [{stream: "S25 Talker", packetFilter: expr(udp.destPort == 1007)}]
*.Cam3.bridging.streamCoder.encoder.mapping = [{stream: "S25 Talker", pcp: 5}]

# CAM4 stream identification and coding
*.Cam4.bridging.streamIdentifier.identifier.mapping = [{stream: "S26 Talker", packetFilter: expr(udp.destPort == 1008)}]
*.Cam4.bridging.streamCoder.encoder.mapping = [{stream: "S26 Talker", pcp: 5}]

# Telematics stream identification and coding
*.Telematics.bridging.streamIdentifier.identifier.mapping = [{stream: "S28 Talker", packetFilter: expr(udp.destPort == 1000)},
																{stream: "S29 Talker", packetFilter: expr(udp.destPort == 1008)}]
*.Telematics.bridging.streamCoder.encoder.mapping = [{stream: "S28 Talker", pcp: 5},
														{stream: "S29 Talker", pcp: 4}]

# CD/DVD stream identification and coding
*.CdAudioDVD.bridging.streamIdentifier.identifier.mapping = [{stream: "S30 Talker", packetFilter: expr(udp.destPort == 1001)},
																{stream: "S31 Talker", packetFilter: expr(udp.destPort == 1002)}]
*.CdAudioDVD.bridging.streamCoder.encoder.mapping = [{stream: "S30 Talker", pcp: 4},
														{stream: "S31 Talker", pcp: 4}]

# SWs  
*.SW*.bridging.streamCoder.decoder.mapping = [{source: "DaCam", pcp: 5, stream: "S1 Talker"},
												{source: "DaCam", pcp: 5, stream: "S2 Talker"},
												{source: "DaCam", pcp: 5, stream: "S3 Talker"},
												{source: "DaCam", pcp: 5, stream: "S4 Talker"},
												{source: "DaCam", pcp: 5, stream: "S27 Talker"},
												{source: "HU", pcp: 5, stream: "S5 Talker"},
												{source: "HU", pcp: 5, stream: "S6 Talker"},
												{source: "HU", pcp: 5, stream: "S7 Talker"},
												{source: "HU", pcp: 5, stream: "S8 Talker"},
												{source: "HU", pcp: 5, stream: "S9 Talker"},
												{source: "HU", pcp: 5, stream: "S10 Talker"},
												{source: "HU", pcp: 5, stream: "S11 Talker"},
												{source: "HU", pcp: 5, stream: "S12 Talker"},
												{source: "HU", pcp: 5, stream: "S13 Talker"},
												{source: "HU", pcp: 5, stream: "S14 Talker"},
												{source: "HU", pcp: 5, stream: "S15 Talker"},
												{source: "CU", pcp: 5, stream: "S16 Talker"},
												{source: "CU", pcp: 5, stream: "S17 Talker"},
												{source: "CU", pcp: 5, stream: "S18 Talker"},
												{source: "CU", pcp: 5, stream: "S19 Talker"},
												{source: "CU", pcp: 5, stream: "S20 Talker"},
												{source: "CU", pcp: 5, stream: "S21 Talker"},
												{source: "CU", pcp: 5, stream: "S22 Talker"},
                                                {source: "Cam1", pcp: 5, stream: "S23 Talker"},
												{source: "Cam2", pcp: 5, stream: "S24 Talker"},
												{source: "Cam3", pcp: 5, stream: "S25 Talker"},
												{source: "Cam4", pcp: 5, stream: "S26 Talker"},
												{source: "Telematics", pcp: 5, stream: "S28 Talker"},
												{source: "Telematics", pcp: 4, stream: "S29 Talker"},
												{source: "CdAudioDVD", pcp: 4, stream: "S30 Talker"},
												{source: "CdAudioDVD", pcp: 4, stream: "S31 Talker"}]

*.SW*.bridging.streamCoder.encoder.mapping = [{stream: "S1 Talker", pcp: 5},
												{stream: "S2 Talker", pcp: 5},
												{stream: "S3 Talker", pcp: 5},
												{stream: "S4 Talker", pcp: 5},
												{stream: "S5 Talker", pcp: 5},
												{stream: "S27 Talker", pcp: 5},
												{stream: "S5 Talker", pcp: 5},
												{stream: "S6 Talker", pcp: 5},
												{stream: "S7 Talker", pcp: 5},
												{stream: "S8 Talker", pcp: 5},
												{stream: "S9 Talker", pcp: 5},
												{stream: "S10 Talker", pcp: 5},
												{stream: "S11 Talker", pcp: 5},
												{stream: "S12 Talker", pcp: 5},
												{stream: "S13 Talker", pcp: 5},
												{stream: "S14 Talker", pcp: 5},
												{stream: "S15 Talker", pcp: 5},
												{stream: "S16 Talker", pcp: 5},
												{stream: "S17 Talker", pcp: 5},
												{stream: "S18 Talker", pcp: 5},
												{stream: "S19 Talker", pcp: 5},
												{stream: "S20 Talker", pcp: 5},
												{stream: "S21 Talker", pcp: 5},
												{stream: "S22 Talker", pcp: 5},
												{stream: "S23 Talker", pcp: 5},
												{stream: "S24 Talker", pcp: 5},
												{stream: "S25 Talker", pcp: 5},
												{stream: "S26 Talker", pcp: 5},
												{stream: "S28 Talker", pcp: 5},
												{stream: "S29 Talker", pcp: 4},
												{stream: "S30 Talker", pcp: 4},
												{stream: "S31 Talker", pcp: 4}]

###########################################################

# Traffic Shaping Configuration
*.SW*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qCreditBasedShaper"
*.SW*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].typename = "Ieee8021qCreditBasedShaper"
# credit based shaper for AVB classes
*.SW*.eth[*].macLayer.queue.numTrafficClasses = 2
*.SW*.eth[*].macLayer.queue.*[0].display-name = "Class B"
*.SW*.eth[*].macLayer.queue.*[1].display-name = "Class A"

*.SW*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[0].idleSlope = 150Mbps
*.SW*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 600Mbps

###########################################################

# PCAP Recorder

#*.SW1.numPcapRecorders = 1
#*.SW1.pcapRecorder[0].moduleNamePatterns = "eth[*]"
#*.SW1.pcapRecorder[0].pcapFile = "results/sw1.eth.pcap"
#
#*.SW2.numPcapRecorders = 1
#*.SW2.pcapRecorder[0].moduleNamePatterns = "eth[*]"
#*.SW2.pcapRecorder[0].pcapFile = "results/sw2.eth.pcap"
#
#**.crcMode = "computed"
#**.fcsMode = "computed"

###########################################################

# Frame Preemption Configuration

# enable frame preemption
# *.sw*.hasFramePreemption = true
# *.sw*.eth[*].macLayer.typename = "EthernetPreemptingMacLayer"
# *.sw*.eth[*].phyLayer.typename = "EthernetPreemptingPhyLayer"

###########################################################